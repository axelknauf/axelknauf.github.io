<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Knowledge Base </title>
    <link>https://axelknauf.github.io/</link>
    <language>en-us</language>
    <author>Axel Knauf</author>
    <rights>(C) 2015</rights>
    <updated>2015-12-20 20:39:11 &#43;0100 CET</updated>

    
      
        <item>
          <title>Oracle Administration snippets</title>
          <link>https://axelknauf.github.io/post/oracle-admin-snippets/</link>
          <pubDate>Sun, 20 Dec 2015 20:39:11 CET</pubDate>
          <author>Axel Knauf</author>
          <guid>https://axelknauf.github.io/post/oracle-admin-snippets/</guid>
          <description>

&lt;h3 id=&#34;check-for-blocking-locks:d09824b548f82fef46f982c408adadae&#34;&gt;Check for blocking locks&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    select s1.username || &#39;@&#39; || s1.machine
     || &#39; ( SID=&#39; || s1.sid || &#39; )  is blocking &#39;
        || s2.username || &#39;@&#39; || s2.machine || &#39; ( SID=&#39; || s2.sid || &#39; ) &#39; AS blocking_status
        from v$lock l1, v$session s1, v$lock l2, v$session s2
        where s1.sid=l1.sid and s2.sid=l2.sid
        and l1.BLOCK=1 and l2.request &amp;gt; 0
        and l1.id1 = l2.id1
        and l2.id2 = l2.id2;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;check-kill-user-sessions:d09824b548f82fef46f982c408adadae&#34;&gt;Check / kill user sessions&lt;/h3&gt;

&lt;h4 id=&#34;show-all-sessions:d09824b548f82fef46f982c408adadae&#34;&gt;Show all sessions&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;    select * from v$session;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;session-details:d09824b548f82fef46f982c408adadae&#34;&gt;Session details&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;    SELECT se.osuser,se.username,se.status,se.sid &amp;quot;O-sid&amp;quot;,
    p.pid &amp;quot;O-pid&amp;quot; ,se.process &amp;quot;user pid&amp;quot;, p.spid &amp;quot;wkg-pid&amp;quot;,
    to_char(se.logon_time,&#39;MM/DD/YY HH24:MI&#39;) &amp;quot;logon&amp;quot;,se.machine
    FROM v$session se, v$process p
    WHERE addr=paddr AND se.osuser IS NOT NULL AND se.username IS NOT NULL
    ORDER BY se.osuser
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;kill-session-sid-serial-from-v-session-mentioned-above-execute-as-system:d09824b548f82fef46f982c408adadae&#34;&gt;Kill session (sid &amp;amp; serial# from v$session mentioned above, execute as SYSTEM)&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;    ALTER SYSTEM KILL SESSION &#39;sid,serial#&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;kill-session-the-hard-way-parameters-as-above:d09824b548f82fef46f982c408adadae&#34;&gt;Kill session the hard way (parameters as above)&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;    ALTER SYSTEM KILL SESSION &#39;sid,serial#&#39; IMMEDIATE;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;display-sql-for-sql-id:d09824b548f82fef46f982c408adadae&#34;&gt;Display SQL for sql_id&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    -- sql_id can be determined from v$session
    select * from v$sqlarea where sql_id= &#39;3fmfmpj2kuuf7&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;locked-tables-and-objects:d09824b548f82fef46f982c408adadae&#34;&gt;Locked tables and objects&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    -- Locks by type
    SELECT session_id,lock_type, mode_held, mode_requested, blocking_others, lock_id1
    FROM dba_lock l
    WHERE lock_type NOT IN (&#39;Media Recovery&#39;, &#39;Redo Thread&#39;);

    -- generally locked objects
    SELECT oracle_username USERNAME, owner OBJECT_OWNER,
    object_name, object_type, s.osuser,
    DECODE(l.block,
      0, &#39;Not Blocking&#39;,
      1, &#39;Blocking&#39;,
      2, &#39;Global&#39;) STATUS,
      DECODE(v.locked_mode,
        0, &#39;None&#39;,
        1, &#39;Null&#39;,
        2, &#39;Row-S (SS)&#39;,
        3, &#39;Row-X (SX)&#39;,
        4, &#39;Share&#39;,
        5, &#39;S/Row-X (SSX)&#39;,
        6, &#39;Exclusive&#39;, TO_CHAR(lmode)
      ) MODE_HELD
    FROM gv$locked_object v, dba_objects d,
    gv$lock l, gv$session s
    WHERE v.object_id = d.object_id
    AND (v.object_id = l.id1)
    and v.session_id = s.sid

    -- lock details
    SELECT SUBSTR(TO_CHAR(w.session_id),1,5) WSID, p1.spid WPID,
      SUBSTR(s1.username,1,12) &amp;quot;WAITING User&amp;quot;,
      SUBSTR(s1.osuser,1,8) &amp;quot;OS User&amp;quot;,
      SUBSTR(s1.program,1,20) &amp;quot;WAITING Program&amp;quot;,
      s1.client_info &amp;quot;WAITING Client&amp;quot;,
      SUBSTR(TO_CHAR(h.session_id),1,5) HSID, p2.spid HPID,
      SUBSTR(s2.username,1,12) &amp;quot;HOLDING User&amp;quot;,
      SUBSTR(s2.osuser,1,8) &amp;quot;OS User&amp;quot;,
      SUBSTR(s2.program,1,20) &amp;quot;HOLDING Program&amp;quot;,
      s2.client_info &amp;quot;HOLDING Client&amp;quot;,
      o.object_name &amp;quot;HOLDING Object&amp;quot;
    FROM gv$process p1, gv$process p2, gv$session s1,
      gv$session s2, dba_locks w, dba_locks h, dba_objects o
    WHERE w.last_convert &amp;gt; 120
    AND h.mode_held != &#39;None&#39;
    AND h.mode_held != &#39;Null&#39;
    AND w.mode_requested != &#39;None&#39;
    AND s1.row_wait_obj# = o.object_id
    AND w.lock_type(+) = h.lock_type
    AND w.lock_id1(+) = h.lock_id1
    AND w.lock_id2 (+) = h.lock_id2
    AND w.session_id = s1.sid (+)
    AND h.session_id = s2.sid (+)
    AND s1.paddr = p1.addr (+)
    AND s2.paddr = p2.addr (+)
    ORDER BY w.last_convert desc;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;tablespace-informations:d09824b548f82fef46f982c408adadae&#34;&gt;Tablespace Informations&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    select
       fs.tablespace_name                          &amp;quot;Tablespace&amp;quot;,
       (df.totalspace - fs.freespace)              &amp;quot;Used MB&amp;quot;,
       fs.freespace                                &amp;quot;Free MB&amp;quot;,
       df.totalspace                               &amp;quot;Total MB&amp;quot;,
       round(100 * (fs.freespace / df.totalspace)) &amp;quot;Pct. Free&amp;quot;
    from
       (select
          tablespace_name,
          round(sum(bytes) / 1048576) TotalSpace
       from
          dba_data_files
       group by
          tablespace_name
       ) df,
       (select
          tablespace_name,
          round(sum(bytes) / 1048576) FreeSpace
       from
          dba_free_space
       group by
          tablespace_name
       ) fs
    where
       df.tablespace_name = fs.tablespace_name;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;table-sizes-for-the-current-schema:d09824b548f82fef46f982c408adadae&#34;&gt;Table sizes for the current schema&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    SET serveroutput ON
    DECLARE
      CURSOR tabs
      IS
        SELECT object_name FROM user_objects WHERE object_type = &#39;TABLE&#39;;
      table_size_meg pls_integer := 0;
    BEGIN
      FOR t IN tabs
      LOOP
        BEGIN
          SELECT SUM(bytes)/(1024*1024)
          INTO table_size_meg
          FROM user_extents
          WHERE segment_type=&#39;TABLE&#39;
          AND segment_name  = t.object_name
          GROUP BY segment_name;
          dbms_output.put_line(t.object_name || &#39;: &#39; || table_size_meg || &#39; MB&#39;);
        EXCEPTION
        WHEN no_data_found THEN
          dbms_output.put_line(&#39;No data found.&#39;);
        END;
      END LOOP;
    END;
    /
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;reverse-engineering-of-db-objects:d09824b548f82fef46f982c408adadae&#34;&gt;Reverse Engineering of DB objects&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    select DBMS_METADATA.GET_DDL(&#39;TABLE&#39;,&#39;table_name&#39;) from dual;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-db-links:d09824b548f82fef46f982c408adadae&#34;&gt;Create DB links&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    CREATE DATABASE LINK &amp;quot;link_name&amp;quot;
      CONNECT TO schema_name 
      IDENTIFIED BY pass
      USING &#39;tns definition (e. g. from tnsnames.ora)&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;determine-table-size-mb:d09824b548f82fef46f982c408adadae&#34;&gt;Determine table size (MB)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    SELECT
      segment_name AS table_name,   
      Sum(bytes)/(1024*1024) table_size_meg
    FROM user_extents
    WHERE segment_type=&#39;TABLE&#39;
    AND segment_name = &#39;table_name&#39;
    GROUP BY segment_name
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;check-compile-state-of-db-objects:d09824b548f82fef46f982c408adadae&#34;&gt;Check compile state of DB objects&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    SELECT o.object_type, o.object_name
    FROM user_objects o
    WHERE o.status &amp;lt;&amp;gt; &#39;VALID&#39;
    AND o.object_type IN (&#39;VIEW&#39;,&#39;PROCEDURE&#39;,&#39;FUNCTION&#39;,&#39;PACKAGE&#39;,&#39;TRIGGER&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;check-long-operations:d09824b548f82fef46f982c408adadae&#34;&gt;Check long operations&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    SELECT v.sid, se.osuser, se.machine, se.program, v.target, v.opname
    FROM V$SESSION_LONGOPS v, v$session se
    WHERE v.sid = se.sid
    AND v.username = &#39;user_name&#39;
    ORDER BY se.machine 

    -- determine progress and remaining time
    SELECT
      To_Char(Floor(elapsed_seconds / 3600), &#39;FM09&#39;) || &#39;:&#39; || 
      To_Char(Floor(Mod(elapsed_seconds, 3600) / 60), &#39;FM09&#39;) || &#39;:&#39; || 
      To_Char(Mod(elapsed_seconds, 60), &#39;FM09&#39;) AS runtime,
      To_Char(Floor(time_remaining / 3600), &#39;FM09&#39;) || &#39;:&#39; || 
      To_Char(Floor(Mod(time_remaining, 3600) / 60), &#39;FM09&#39;) || &#39;:&#39; || 
      To_Char(Mod(time_remaining, 60), &#39;FM09&#39;) AS remaining,
      To_Char(((sofar / totalwork) * 100), &#39;FM99.99&#39;) || &#39; %&#39; AS done_pct 
    FROM V$SESSION_LONGOPS v, v$session se
    WHERE v.sid = se.sid 
    AND v.target = &#39;schema_name.object_name&#39;
    AND v.username = &#39;schema_name&#39;
    AND se.sid = &#39;&amp;lt;sid&amp;gt;&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;check-where-the-trace-file-for-current-session-is:d09824b548f82fef46f982c408adadae&#34;&gt;Check where the trace file for current session is&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    select 
      u_dump.value   || &#39;/&#39;     || 
      db_name.value  || &#39;_ora_&#39; || 
      v$process.spid || 
      nvl2(v$process.traceid,  &#39;_&#39; || v$process.traceid, null ) 
      || &#39;.trc&#39;  &amp;quot;Trace File&amp;quot;
    from 
                 v$parameter u_dump 
      cross join v$parameter db_name
      cross join v$process 
            join v$session 
              on v$process.addr = v$session.paddr
    where 
     u_dump.name   = &#39;user_dump_dest&#39; and 
     db_name.name  = &#39;db_name&#39;        and
     v$session.audsid=sys_context(&#39;userenv&#39;,&#39;sessionid&#39;);

    (from http://www.adp-gmbh.ch/ora/misc/find_trace_file.html)
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Linux snippets</title>
          <link>https://axelknauf.github.io/post/linux-filesystem-snippets/</link>
          <pubDate>Sun, 20 Dec 2015 20:17:16 CET</pubDate>
          <author>Axel Knauf</author>
          <guid>https://axelknauf.github.io/post/linux-filesystem-snippets/</guid>
          <description>

&lt;h3 id=&#34;too-many-open-files:39650f4cd9137409ea20052b6865dcd3&#34;&gt;&amp;ldquo;Too many open files&amp;rdquo;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;check current limit (only valid for executing user): &lt;code&gt;ulimit -a&lt;/code&gt; or specifically &lt;code&gt;ulimit -n&lt;/code&gt; (&lt;code&gt;-n&lt;/code&gt; refers to &amp;ldquo;number of files&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;set limit with &lt;code&gt;ulimit -n unlimited&lt;/code&gt; or &lt;code&gt;ulimit -n 65535&lt;/code&gt; (may result in &amp;ldquo;permission denied&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;on Fedora: edit &lt;code&gt;/etc/security/limits.conf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;list-folders-by-size-descending-recursively:39650f4cd9137409ea20052b6865dcd3&#34;&gt;List folders by size descending recursively&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    find . -type d -exec du -b {} \; | sort -nr | uniq
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;latest-changed-files-one-folder-deep-search:39650f4cd9137409ea20052b6865dcd3&#34;&gt;Latest changed files (one folder deep search)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    find . -maxdepth 2 -type f -exec stat -c %y_%n {} \; | sort -r | less
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;10-latest-changed-files-recursively:39650f4cd9137409ea20052b6865dcd3&#34;&gt;10 latest changed files (recursively)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    find . -type f -printf &#39;%TF_%TT %p \n&#39; | sort -r | head -n 10
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;change-file-encoding-e-g-from-utf-8:39650f4cd9137409ea20052b6865dcd3&#34;&gt;Change file encoding (e. g. from UTF-8)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    recode -f ascii &amp;lt;file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;use-kernel-prerouting-to-direct-traffic-from-port-80-to-8080-e-g-for-fronting-tomcat:39650f4cd9137409ea20052b6865dcd3&#34;&gt;Use kernel prerouting to direct traffic from port 80 to 8080, e. g. for fronting tomcat&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j DNAT --to-destination :8080
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;repeatedly-serve-a-file-using-netcat-call-with-wget-http-localhost-12345:39650f4cd9137409ea20052b6865dcd3&#34;&gt;Repeatedly serve a file using netcat (call with wget &lt;a href=&#34;http://localhost:12345/&#34;&gt;http://localhost:12345/&lt;/a&gt;)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    #!/bin/bash

    while true
    do
      { echo -ne &amp;quot;HTTP/1.0 200 OK\r\nContent-Length: $(wc -c &amp;amp;lt;file.txt)\r\n\r\n&amp;quot;; cat file.txt; } | nc -l 12345
    done

    exit 0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;apply-htdigest-protection-to-apache-directory:39650f4cd9137409ea20052b6865dcd3&#34;&gt;Apply htdigest protection to Apache directory&lt;/h3&gt;

&lt;h4 id=&#34;required-modules:39650f4cd9137409ea20052b6865dcd3&#34;&gt;Required modules&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mod_authz_user&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mod_auth_digest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mod_authn_file&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;configuration:39650f4cd9137409ea20052b6865dcd3&#34;&gt;Configuration&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;Location /path/to/protect&amp;gt;
       AuthType Digest
       AuthName &amp;quot;Protected Area&amp;quot;
       AuthDigestDomain /path/to/protect http://11.22.33.44/path/to/protect
       AuthDigestProvider file
       AuthUserFile /etc/apache2/conf/digest_pw
       Require valid-user
    &amp;lt;/Location&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;create-digest-pw-file:39650f4cd9137409ea20052b6865dcd3&#34;&gt;Create digest_pw file&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;    htdigest -c /etc/apache2/conf/digest_pw &amp;quot;Protected Area&amp;quot; username
    =&amp;gt; will be asked for password, file created
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;upload-multiple-files-via-ftp-which-is-an-interactive-tool:39650f4cd9137409ea20052b6865dcd3&#34;&gt;Upload multiple files via FTP (which is an interactive tool)&lt;/h3&gt;

&lt;p&gt;Requires curlftpfs and fuse + rsync&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    #!/bin/bash

    SOURCE_DIR=./dist/
    HOST=some.host.com
    USER=username
    PASS=passsword
    TARGET_DIR=/target/
    MOUNT_POINT=./mnt/
    TMP_DIR=$(mktemp -d)

    #########################################################################
    ## Abort if mount point does not exist
    if [ ! -d ${MOUNT_POINT} ];
    then
      echo &amp;quot;Target mount point directory does not exist, aborting.&amp;quot;
      exit 1
    fi

    #########################################################################
    ## Mount remote file system locally
    curlftpfs -o user=${USER}:${PASS} ${HOST} ${MOUNT_POINT} || exit 1

    #########################################################################
    ## Transfer files incrementally
    if [ -d &amp;quot;${MOUNT_POINT}/${TARGET_DIR}&amp;quot; ]
    then
        rsync -rtuv --modify-window=1 --delete --no-perms --size-only --temp-dir=${TMP_DIR} ${SOURCE_DIR}/ ${MOUNT_POINT}/${TARGET_DIR}/
    else
        echo &amp;quot;Target remote directory does not exist, aborting.&amp;quot;
    fi

    #########################################################################
    ## Unmount remote file system
    fusermount -u ${MOUNT_POINT}

    #########################################################################
    ## Remove temporary directory
    if [ -d &amp;quot;${TMP_DIR}&amp;quot; ];
    then
        rm -rf ${TMP_DIR}
    fi

    exit 0
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
      
    
      
    
      
        <item>
          <title>Git als SVN Client nutzen</title>
          <link>https://axelknauf.github.io/post/git-svn/</link>
          <pubDate>Thu, 17 Dec 2015 09:48:22 CET</pubDate>
          <author>Axel Knauf</author>
          <guid>https://axelknauf.github.io/post/git-svn/</guid>
          <description>

&lt;h1 id=&#34;git-als-svn-client:1dcdb17f1cd8847d72134adf129e70ba&#34;&gt;Git als SVN Client&lt;/h1&gt;

&lt;p&gt;Man kann Git als SVN Client nutzen, die Funktionalität wird von Git als &amp;ldquo;git-svn Bridge&amp;rdquo; bereitgestellt. Letztendlich ist es einfach ein Kommando des Git Clients, das mit &lt;code&gt;git svn &amp;lt;command&amp;gt;&lt;/code&gt; aufgerufen werden kann.&lt;/p&gt;

&lt;h2 id=&#34;arbeiten-mit-git-svn:1dcdb17f1cd8847d72134adf129e70ba&#34;&gt;Arbeiten mit git-svn&lt;/h2&gt;

&lt;h3 id=&#34;checkout-a-k-a-clone:1dcdb17f1cd8847d72134adf129e70ba&#34;&gt;Checkout a. k. a. Clone&lt;/h3&gt;

&lt;p&gt;Angenommen, Du hast ein SVN Repo unter &lt;a href=&#34;http://svn.example.com/my/repo&#34;&gt;http://svn.example.com/my/repo&lt;/a&gt; mit den Standardpfaden:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.example.com/my/repo/trunk&#34;&gt;http://svn.example.com/my/repo/trunk&lt;/a&gt; - Trunk&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.example.com/my/repo/branches&#34;&gt;http://svn.example.com/my/repo/branches&lt;/a&gt; - SVN Branches&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.example.com/my/repo/tags&#34;&gt;http://svn.example.com/my/repo/tags&lt;/a&gt; - SVN Tags&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dann kann man auf folfende Art ein lokales Git Repository klonen:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git svn clone --stdlayout &amp;lt;url&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dieser Prozess kann einige Zeit dauern, da Git ja die komplette History auscheckt und lokal vorhält. Falls das Repository eine sehr lange History hat und man sie nicht vollständig braucht, kann man sie beschränken, indem man den &lt;code&gt;--revisions (-r)&lt;/code&gt; Parameter mitgibt (vgl. Doku unten).&lt;/p&gt;

&lt;p&gt;Danach hat man ein lokales Git Repository, befindet sich im master Branch und kann lokal den gewohnten Git Workflow verwenden, bis auf Ausnahme von push / pull, die hier nicht funktionieren.&lt;/p&gt;

&lt;h3 id=&#34;update-commit:1dcdb17f1cd8847d72134adf129e70ba&#34;&gt;Update &amp;amp; Commit&lt;/h3&gt;

&lt;p&gt;Statt &lt;code&gt;fetch/merge&lt;/code&gt;, &lt;code&gt;pull&lt;/code&gt; und &lt;code&gt;push&lt;/code&gt; verwendet man bei &lt;code&gt;git-svn&lt;/code&gt; die beiden Kommandos &lt;code&gt;svn rebase&lt;/code&gt; und &lt;code&gt;svn dcommit&lt;/code&gt;. Angenommen, man verwendet den master Branch, um mit dem SVN Repo zu synchronisieren und entwickelt lokal in einem dev Branch, der vom master abzweigt, dann sähe ein üblicher Workflow so aus:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Ausgangssituation:
# Man befindet sich im branch &amp;quot;dev&amp;quot;, hier sind neuere Änderungen als im master.

# SVN UPDATE == GIT SVN REBASE
# Zuerst wechseln wir zum master und holen uns ein SVN Update und aktualisieren damit den &amp;quot;dev&amp;quot; Branch
git checkout master
git svn rebase 
git rebase master dev

# SVN COMMIT == GIT SVN DCOMMIT
# Jetzt befindet man sich wieder im dev Branch, der ist jetzt up-to-date.
# Man mergt die eigenen, neueren Commits in master und &amp;quot;pusht&amp;quot; die Änderungen ins SVN Repo, mit dcommit
git checkout master
git merge dev
git svn dcommit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Wichtig: das hier verwendete &lt;code&gt;git svn rebase&lt;/code&gt; im &lt;code&gt;master&lt;/code&gt; pullt nur die neuen Commits aus dem SVN Trunk, d. h. wenn sich etwas an SVN Branches oder Tags geändert hat, sind diese Änderungen noch nicht im lokalen Git Repo angekommen. Infos zu Branches und Tags folgen unten.&lt;/p&gt;

&lt;h3 id=&#34;arbeiten-mit-svn-branches:1dcdb17f1cd8847d72134adf129e70ba&#34;&gt;Arbeiten mit SVN Branches&lt;/h3&gt;

&lt;p&gt;Wenn man SVN Branches verwenden will, muss man sie auch im lokalen Git Repo auschecken und verwenden. Der Workflow ist dabei sehr ähnlich zu oben, nur dass man sich vorher die aktuellen Branches und Tags aus dem SVN Repo fetchen muss:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Alle Branches und Tags mit dem SVN Repo synchronisieren
git checkout master
git svn fetch --fetch-all

# SVN Branch auschecken und drin arbeiten
git checkout -b &amp;lt;neuer-git-branch-name&amp;gt; &amp;lt;remotes/svn-branch-name&amp;gt;
vi &amp;lt;file&amp;gt;
git add &amp;lt;file&amp;gt;
git commit -m &amp;quot;Commit message&amp;quot;

# SVN Update holen, falls sich im SVN Branch etwas geändert hat (sonst schlägt das Commit fehl)
git svn rebase

# SVN Commit der lokalen Änderungen in den SVN Branch
git svn dcommit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Auch hier kann man lokal beliebig Git Branches verwenden.&lt;/p&gt;

&lt;h3 id=&#34;merges-zwischen-trunk-und-branch:1dcdb17f1cd8847d72134adf129e70ba&#34;&gt;Merges zwischen Trunk und Branch&lt;/h3&gt;

&lt;p&gt;Wenn man Bugfixes o. ä. zwischen den SVN Branches mergen will, kann man auf das übliche Git &lt;code&gt;cherry-pick&lt;/code&gt; zurückgreifen. Wenn man lokal sowohl den master (= SVN Trunk) als auch den SVN Branch vorliegen hat, geht das git-nativ:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Ziel-SVN-branch auschecken (man verwendet für das checkout den Branch Namen im lokalen Git Repo, der kann anders sein als der Name des Branches im SVN Repo)
git checkout &amp;lt;git-branch-name&amp;gt;
git cherry-pick -x &amp;lt;hash&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Der Platzhalter &lt;code&gt;&amp;lt;hash&amp;gt;&lt;/code&gt; bezieht sich dabei auf einen beliebigen Commit im lokalen Git Repo, z. B. einen Fix aus &lt;code&gt;master&lt;/code&gt; / Trunk.&lt;/p&gt;

&lt;h2 id=&#34;links:1dcdb17f1cd8847d72134adf129e70ba&#34;&gt;Links&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Offizielle Doku: &lt;a href=&#34;https://git-scm.com/docs/git-svn&#34;&gt;https://git-scm.com/docs/git-svn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hilfreiche Zusammenfassung: &lt;a href=&#34;https://stackoverflow.com/questions/3239759/checkout-remote-branch-using-git-svn&#34;&gt;https://stackoverflow.com/questions/3239759/checkout-remote-branch-using-git-svn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
      
    
      
    

  </channel>
</rss>
