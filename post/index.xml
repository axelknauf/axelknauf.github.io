<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Knowledge Base </title>
    <link>https://axelknauf.github.io/post/</link>
    <language>en-us</language>
    <author>Axel Knauf</author>
    <rights>(C) 2015</rights>
    <updated>2015-12-27 11:53:23 &#43;0100 CET</updated>

    
      
        <item>
          <title>Linux: keeping files in sync with unison</title>
          <link>https://axelknauf.github.io/post/linux-unison-synchronization/</link>
          <pubDate>Sun, 27 Dec 2015 11:53:23 CET</pubDate>
          <author>Axel Knauf</author>
          <guid>https://axelknauf.github.io/post/linux-unison-synchronization/</guid>
          <description>

&lt;p&gt;In this post I would like to describe how to keep files in sync across two (or more) computers using a central storage and the useful tool &lt;code&gt;unison&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;preparations:a6b9c1d3f6fa980bc7d7be7beaa2d553&#34;&gt;Preparations&lt;/h2&gt;

&lt;p&gt;In order to synchronize files across machines, you need the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a folder on each machine which shall serve as synchronization point&lt;/li&gt;
&lt;li&gt;a central storage, e. g. an SMB file share or some similar storage (may be SSH, ..)&lt;/li&gt;
&lt;li&gt;the relevant software on each machine, details below&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;required-software:a6b9c1d3f6fa980bc7d7be7beaa2d553&#34;&gt;Required Software&lt;/h3&gt;

&lt;p&gt;I am running Ubuntu 15.10 on each machine, but the packages required are available for many distros, so this may easily work for you.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    sudo apt-get install cifs-utils unison-gtk
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I am using &lt;code&gt;cifs-utils&lt;/code&gt; to locally mount a centrally-shared SMB drive (actually a USB thumb drive plugged into my Fritz Box and shared via SMBFS from there).&lt;/p&gt;

&lt;h2 id=&#34;setting-up-cifs:a6b9c1d3f6fa980bc7d7be7beaa2d553&#34;&gt;Setting up CIFS&lt;/h2&gt;

&lt;p&gt;In order to be able to locally mount the SMB share you first need to make it available on your host. Im my case - I am using a Fritz Box - this was quite easy, I will not write about this here. After having made it available on the network, you can mount it locally using these steps (derived from &lt;a href=&#34;http://askubuntu.com/a/157140&#34;&gt;this answer&lt;/a&gt;):&lt;/p&gt;

&lt;p&gt;First, create a credentials file in your home folder:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    vim ~/.smbcredentials
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Put your configuration settings in there:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    username=username
    password=secret_password
    domain=workgroup_name
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Make sure the file is only readable by your own user:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    chmod 600 ~/.smbcredentials
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then, create a mount point where you want to have it available on your machine:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    sudo mkdir /media/shared
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Having set up the SMB credentials and the mount point, you can add the file share to your &lt;code&gt;/etc/fstab&lt;/code&gt; so it gets automatically mounted each time you boot:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    sudoedit /etc/fstab
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add a line similar to the following - you will have to adjust the values to fit your own paths and UID/GID. If you are unsure about the IDs, check the output of &lt;code&gt;id&lt;/code&gt; for your user:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    //server/share-name /media/shared cifs credentials=/home/username/.smbcredentials,uid=1000,gid=1000 0 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If all pieces fit together you can now mount the share with&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    sudo mount -a
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you have the remote folder mounted locally. Next we create a local folder in your home which shall be kept in sync with the remote one:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    mkdir ~/shared
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;setting-up-unison:a6b9c1d3f6fa980bc7d7be7beaa2d553&#34;&gt;Setting up &lt;code&gt;unison&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Setting up unison is straight-forward. Usually being a CLI user, I went for the GTK UI this time. If your have not run unison before, it will automatically launch the new profile wizard to guide you through the process. Create a new profile, choose &lt;code&gt;~/shared&lt;/code&gt; as first folder, then &lt;code&gt;/media/shared&lt;/code&gt; as second folder and make sure to check the box for FAT FS compatibility, since the SMB share does not know about unix permissions and will yield errors if you omit it. In case you do, simple re-create the profile with the correct settings this time.&lt;/p&gt;

&lt;p&gt;After having created the profile, unison will attempt an initial synchronization. You will get a warning message telling that there have been no archive folders, yet. This is okay, they are created when you first run unison and trigger the synchronization.&lt;/p&gt;

&lt;p&gt;As result of the first synchroniation, &lt;code&gt;unison&lt;/code&gt; will tell you about the differences, before anything happens. You can review the list of actions and if all is well, simple click on the &amp;ldquo;Go!&amp;rdquo; button to start the synchronization. During the first synch, it may well take some time, depending on the amount of data transferred and your network connection speed.&lt;/p&gt;

&lt;h2 id=&#34;adding-a-second-machine:a6b9c1d3f6fa980bc7d7be7beaa2d553&#34;&gt;Adding a second machine&lt;/h2&gt;

&lt;p&gt;Adding a second machine to synchronize looks identical to the first. You install the software, set up the SMB mount, configure unison and let it run. However, there may be different results depending on the starting conditions.&lt;/p&gt;

&lt;p&gt;If the second machine did not have any files previously, &lt;code&gt;unison&lt;/code&gt; will download everything initially, and you are fine. In case you already had a - mostly identical - copy of the shared files locally, &lt;code&gt;unison&lt;/code&gt; may present you with a list of changed / updated files and you can choose how to synchronize them.&lt;/p&gt;

&lt;h2 id=&#34;synchronization-strategies:a6b9c1d3f6fa980bc7d7be7beaa2d553&#34;&gt;Synchronization Strategies&lt;/h2&gt;

&lt;p&gt;As described in &lt;a href=&#34;http://www.cis.upenn.edu/~bcpierce/unison/download/releases/stable/unison-manual.html&#34;&gt;the official documentation&lt;/a&gt;, the best strategy to keep multiple machines in sync is to set up a spokes-and-hub network. This means that each client machine synchronizes with a central hub, much like many centrally managed SCMs work. Unison itself only supports two-node-synchronization, but running a central server like the SMB share above, solves this issue easily.&lt;/p&gt;

&lt;p&gt;I hope this guide was useful. Happy hacking!&lt;/p&gt;

&lt;h2 id=&#34;links-and-docs:a6b9c1d3f6fa980bc7d7be7beaa2d553&#34;&gt;Links and docs&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Official homepage: &lt;a href=&#34;http://www.cis.upenn.edu/~bcpierce/unison/docs.html&#34;&gt;http://www.cis.upenn.edu/~bcpierce/unison/docs.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Documentation below: &lt;a href=&#34;http://www.cis.upenn.edu/~bcpierce/unison/download/releases/stable/unison-manual.html&#34;&gt;http://www.cis.upenn.edu/~bcpierce/unison/download/releases/stable/unison-manual.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Java: Dynamic Event Throttling</title>
          <link>https://axelknauf.github.io/post/java-throttling-exception-limit/</link>
          <pubDate>Sun, 20 Dec 2015 20:44:20 CET</pubDate>
          <author>Axel Knauf</author>
          <guid>https://axelknauf.github.io/post/java-throttling-exception-limit/</guid>
          <description>

&lt;p&gt;In the code snippet described below I outline an algorithm for dynamically throttle the number of events occurring. In the example I limit the rate of exceptions being thrown, but theoretically this can be any kind of event, e. g. requests coming from some event source or user.&lt;/p&gt;

&lt;h2 id=&#34;throttling-rate-limiting-for-requests-or-in-this-case-exceptions:2ff4331f2a2cc91639ed40adb8607494&#34;&gt;Throttling / rate limiting for requests (or in this case, exceptions)&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;    import java.util.Random;

    import org.junit.Test;

    public class Bar {

      private static final long rate = 10L; // ten exceptions allowed
      private static final long per = 60000L; // per minute (= 12.000
                          // milliseconds)
      private static long allowance = rate;
      private static long last = System.currentTimeMillis();

      @Test
      public void testThresholding() {
        // Algorithm adapted from:
        // http://stackoverflow.com/questions/667508/whats-a-good-rate-limiting-algorithm
        for (int i = 0; i &amp;lt; 120; i++) {
          try {
            businessMethod();
          }
          catch (RuntimeException e) {
            long time = System.currentTimeMillis();
            long passedMs = Math.max(time - last, 1);
            last = time;

            double coeff = (double) rate / (double) per;
            long increment = Math.round(passedMs * coeff);

            allowance += increment;

            System.out.printf(&amp;quot;-----------------------------\n&amp;quot;);
            System.out.printf(&amp;quot;time\t\t:%d\n&amp;quot;, time);
            System.out.printf(&amp;quot;passed (ms)\t:%d\n&amp;quot;, passedMs);
            System.out.printf(&amp;quot;increment\t:%d\n&amp;quot;, increment);
            System.out.printf(&amp;quot;allowance\t:%d\n&amp;quot;, allowance);

            // Uncomment this block to enable throttling to the
            // defined rate.
            // if (allowance &amp;gt; rate) {
            // allowance = rate; // throttle
            // }
            // System.out.printf(&amp;quot;throttled\t:%d\n&amp;quot;, allowance);

            if (allowance &amp;lt; 1) {
              System.out.println(&amp;quot;==&amp;gt; too many exceptions!&amp;quot;);
            }
            else {
              System.out.println(&amp;quot;==&amp;gt; still inside the limit.&amp;quot;);
              allowance--;
            }

          }
        }
      }

      private void businessMethod() {
        // How many percent of business calls result in an exception
        final int exceptionPercent = 10;

        System.out.println(&amp;quot;Business method&amp;quot;);

        int val = new Random().nextInt(101);
        int delay = new Random().nextInt(1001);
        try {
          Thread.sleep(delay);
          if (val &amp;lt;= exceptionPercent) {
            throw new RuntimeException(&amp;quot;BusinessException&amp;quot;);
          }
        }
        catch (InterruptedException e) {
          // ignore
        }
      }
    }
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Using Git as SVN Client</title>
          <link>https://axelknauf.github.io/post/git-svn/</link>
          <pubDate>Fri, 18 Dec 2015 09:48:22 CET</pubDate>
          <author>Axel Knauf</author>
          <guid>https://axelknauf.github.io/post/git-svn/</guid>
          <description>

&lt;p&gt;Using Git as SVN client is quite easy, since the functionality has been built-in already, named the &amp;ldquo;git-svn&amp;rdquo; bridge. It boils down to an additional Git command which can be used in the form &lt;code&gt;git svn &amp;lt;command&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;working-with-git-svn:1dcdb17f1cd8847d72134adf129e70ba&#34;&gt;Working with &lt;code&gt;git-svn&lt;/code&gt;&lt;/h2&gt;

&lt;h3 id=&#34;checkout-a-k-a-clone:1dcdb17f1cd8847d72134adf129e70ba&#34;&gt;Checkout a. k. a. Clone&lt;/h3&gt;

&lt;p&gt;Assuming you have an SVN repo at &lt;a href=&#34;http://svn.example.com/my/repo&#34;&gt;http://svn.example.com/my/repo&lt;/a&gt; with all standard paths:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.example.com/my/repo/trunk&#34;&gt;http://svn.example.com/my/repo/trunk&lt;/a&gt; - Trunk&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.example.com/my/repo/branches&#34;&gt;http://svn.example.com/my/repo/branches&lt;/a&gt; - SVN Branches&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://svn.example.com/my/repo/tags&#34;&gt;http://svn.example.com/my/repo/tags&lt;/a&gt; - SVN Tags&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then you can easily clone the full SVN repo with all its history by running:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git svn clone --stdlayout &amp;lt;url&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This process can take some time since Git clones all history to keep it in the local working copy. In case the history is quite large and you do not need all of it, you can limit the checkout to the most recent revisions using the parameter &lt;code&gt;--revisions (-r)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Afterwards you have a local Git repo like usual, you are in the master branch and you can apply any local workflow you are used to - except for &lt;code&gt;push&lt;/code&gt; and &lt;code&gt;pull&lt;/code&gt;, I will outline their differences below.&lt;/p&gt;

&lt;h3 id=&#34;svn-update-commit:1dcdb17f1cd8847d72134adf129e70ba&#34;&gt;SVN Update &amp;amp; Commit&lt;/h3&gt;

&lt;p&gt;Instead of &lt;code&gt;fetch/merge&lt;/code&gt;, &lt;code&gt;pull&lt;/code&gt; and &lt;code&gt;push&lt;/code&gt;, &lt;code&gt;git-svn&lt;/code&gt; uses the two commands &lt;code&gt;svn rebase&lt;/code&gt; and &lt;code&gt;svn dcommit&lt;/code&gt;. Assuming you use the master branch to synchronize your work with the SVN repo (after the checkout above the SVN remotes should already be configured correctly), a usual workflow may look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    # Starting situation
    # You are in branch &amp;quot;dev&amp;quot; with newer changes than in &amp;quot;master&amp;quot;

    # SVN UPDATE == GIT SVN REBASE
    # First, switch to master branch, fetch an SVN update and rebase the &amp;quot;dev&amp;quot; branch
    git checkout master
    git svn rebase 
    git rebase master dev

    # SVN COMMIT == GIT SVN DCOMMIT
    # Now you are back in the &amp;quot;dev&amp;quot; branch (rebase switches the branch automatically)
    # which is up-to-date with the most recent SVN changes.
    # Now, simply merge the local changes into master, then commit them into the SVN 
    # repo using &amp;quot;dcommit&amp;quot;
    git checkout master
    git merge dev
    git svn dcommit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Important: Using &lt;code&gt;git svn rebase&lt;/code&gt; in master only pulls changes from SVN trunk, so if there are any new tags or branches in the SVN repo, you will not (yet) see them in you local Git repo. How to use SVN branches and tags is shown below.&lt;/p&gt;

&lt;h3 id=&#34;working-with-svn-branches:1dcdb17f1cd8847d72134adf129e70ba&#34;&gt;Working with SVN branches&lt;/h3&gt;

&lt;p&gt;In case you want (or need) to work with SVN branches in your local Git repo, this can be accomplished quite easily. The workflow is similar to above, you only need to fetch the relevant branches from your SVN remote explicitly from the SVN repo.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    # Synchronize all SVN branches and tags with the local Git repo
    git checkout master
    git svn fetch --fetch-all

    # Locally check out the SVN branch as Git branch and work in it
    git checkout -b &amp;lt;new-git-branch-name&amp;gt; &amp;lt;remotes/svn-branch-name&amp;gt;
    vi &amp;lt;file&amp;gt;
    git add &amp;lt;file&amp;gt;
    git commit -m &amp;quot;Commit message&amp;quot;

    # Fetch SVN updates if any (otherwise commit may fail)
    git svn rebase

    # Commit all changes from local Git branch to remote SVN repository branch
    # (dcommit stands for &amp;quot;delta commit&amp;quot;, so the SVN repo will reflect all
    # commits as you see them in your local Git branch - so it may be a good
    # idea to cleanup your non-published history with `git rebase -i` before
    # committing).
    git svn dcommit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can use all Git magic, branches, merges etc. here as usual.&lt;/p&gt;

&lt;h3 id=&#34;merges-between-trunk-and-branch:1dcdb17f1cd8847d72134adf129e70ba&#34;&gt;Merges between Trunk and Branch&lt;/h3&gt;

&lt;p&gt;If you want to merge commits or fixes between SVN branches, you can use &lt;code&gt;git cherry-pick&lt;/code&gt; which is a (tremendously) useful tool. Assuming you have a master branch (corresponding to SVN trunk) and another SVN branch locally, then this can be done git-natively:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    # Checkout target branch (using the branch name of the local git repo, which may 
    # deviate from the branch name in the remote SVN repo)
    git checkout &amp;lt;git-branch-name&amp;gt;
    git cherry-pick -x &amp;lt;hash&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;hash&amp;gt;&lt;/code&gt; refers to an arbitrary commit from the local Git repo, e. g. a specific fix from master / trunk.&lt;/p&gt;

&lt;h2 id=&#34;links:1dcdb17f1cd8847d72134adf129e70ba&#34;&gt;Links&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Official docs: &lt;a href=&#34;https://git-scm.com/docs/git-svn&#34;&gt;https://git-scm.com/docs/git-svn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Useful StackOverflow answer: &lt;a href=&#34;https://stackoverflow.com/questions/3239759/checkout-remote-branch-using-git-svn&#34;&gt;https://stackoverflow.com/questions/3239759/checkout-remote-branch-using-git-svn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Oracle Administration Snippets</title>
          <link>https://axelknauf.github.io/post/oracle-admin-snippets/</link>
          <pubDate>Tue, 20 Oct 2015 20:39:11 &#43;0100</pubDate>
          <author>Axel Knauf</author>
          <guid>https://axelknauf.github.io/post/oracle-admin-snippets/</guid>
          <description>

&lt;p&gt;On this page I am collecting bits and pieces which help with Oracle database administration. I have collected them from over the internet, so thanks a lot to all those people providing these helpful examples. In case you are the author of one of them and would like some credit, please let me know and I will mention the source gladly.&lt;/p&gt;

&lt;h2 id=&#34;locks:d09824b548f82fef46f982c408adadae&#34;&gt;Locks&lt;/h2&gt;

&lt;h3 id=&#34;check-for-blocking-locks:d09824b548f82fef46f982c408adadae&#34;&gt;Check for blocking locks&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    select s1.username || &#39;@&#39; || s1.machine
     || &#39; ( SID=&#39; || s1.sid || &#39; )  is blocking &#39;
        || s2.username || &#39;@&#39; || s2.machine || &#39; ( SID=&#39; || s2.sid || &#39; ) &#39; AS blocking_status
        from v$lock l1, v$session s1, v$lock l2, v$session s2
        where s1.sid=l1.sid and s2.sid=l2.sid
        and l1.BLOCK=1 and l2.request &amp;gt; 0
        and l1.id1 = l2.id1
        and l2.id2 = l2.id2;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;sessions:d09824b548f82fef46f982c408adadae&#34;&gt;Sessions&lt;/h2&gt;

&lt;h3 id=&#34;check-kill-user-sessions:d09824b548f82fef46f982c408adadae&#34;&gt;Check / kill user sessions&lt;/h3&gt;

&lt;h4 id=&#34;show-all-sessions:d09824b548f82fef46f982c408adadae&#34;&gt;Show all sessions&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;    select * from v$session;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;session-details:d09824b548f82fef46f982c408adadae&#34;&gt;Session details&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;    SELECT se.osuser,se.username,se.status,se.sid &amp;quot;O-sid&amp;quot;,
    p.pid &amp;quot;O-pid&amp;quot; ,se.process &amp;quot;user pid&amp;quot;, p.spid &amp;quot;wkg-pid&amp;quot;,
    to_char(se.logon_time,&#39;MM/DD/YY HH24:MI&#39;) &amp;quot;logon&amp;quot;,se.machine
    FROM v$session se, v$process p
    WHERE addr=paddr AND se.osuser IS NOT NULL AND se.username IS NOT NULL
    ORDER BY se.osuser
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;kill-session-sid-serial-from-v-session-mentioned-above-execute-as-system:d09824b548f82fef46f982c408adadae&#34;&gt;Kill session (sid &amp;amp; serial# from v$session mentioned above, execute as SYSTEM)&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;    ALTER SYSTEM KILL SESSION &#39;sid,serial#&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;kill-session-the-hard-way-parameters-as-above:d09824b548f82fef46f982c408adadae&#34;&gt;Kill session the hard way (parameters as above)&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;    ALTER SYSTEM KILL SESSION &#39;sid,serial#&#39; IMMEDIATE;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;sql-statements:d09824b548f82fef46f982c408adadae&#34;&gt;SQL Statements&lt;/h2&gt;

&lt;h3 id=&#34;display-sql-for-sql-id:d09824b548f82fef46f982c408adadae&#34;&gt;Display SQL for sql_id&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    -- sql_id can be determined from v$session
    select * from v$sqlarea where sql_id= &#39;3fmfmpj2kuuf7&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;locked-tables-and-objects:d09824b548f82fef46f982c408adadae&#34;&gt;Locked tables and objects&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    -- Locks by type
    SELECT session_id,lock_type, mode_held, mode_requested, blocking_others, lock_id1
    FROM dba_lock l
    WHERE lock_type NOT IN (&#39;Media Recovery&#39;, &#39;Redo Thread&#39;);

    -- generally locked objects
    SELECT oracle_username USERNAME, owner OBJECT_OWNER,
    object_name, object_type, s.osuser,
    DECODE(l.block,
      0, &#39;Not Blocking&#39;,
      1, &#39;Blocking&#39;,
      2, &#39;Global&#39;) STATUS,
      DECODE(v.locked_mode,
        0, &#39;None&#39;,
        1, &#39;Null&#39;,
        2, &#39;Row-S (SS)&#39;,
        3, &#39;Row-X (SX)&#39;,
        4, &#39;Share&#39;,
        5, &#39;S/Row-X (SSX)&#39;,
        6, &#39;Exclusive&#39;, TO_CHAR(lmode)
      ) MODE_HELD
    FROM gv$locked_object v, dba_objects d,
    gv$lock l, gv$session s
    WHERE v.object_id = d.object_id
    AND (v.object_id = l.id1)
    and v.session_id = s.sid

    -- lock details
    SELECT SUBSTR(TO_CHAR(w.session_id),1,5) WSID, p1.spid WPID,
      SUBSTR(s1.username,1,12) &amp;quot;WAITING User&amp;quot;,
      SUBSTR(s1.osuser,1,8) &amp;quot;OS User&amp;quot;,
      SUBSTR(s1.program,1,20) &amp;quot;WAITING Program&amp;quot;,
      s1.client_info &amp;quot;WAITING Client&amp;quot;,
      SUBSTR(TO_CHAR(h.session_id),1,5) HSID, p2.spid HPID,
      SUBSTR(s2.username,1,12) &amp;quot;HOLDING User&amp;quot;,
      SUBSTR(s2.osuser,1,8) &amp;quot;OS User&amp;quot;,
      SUBSTR(s2.program,1,20) &amp;quot;HOLDING Program&amp;quot;,
      s2.client_info &amp;quot;HOLDING Client&amp;quot;,
      o.object_name &amp;quot;HOLDING Object&amp;quot;
    FROM gv$process p1, gv$process p2, gv$session s1,
      gv$session s2, dba_locks w, dba_locks h, dba_objects o
    WHERE w.last_convert &amp;gt; 120
    AND h.mode_held != &#39;None&#39;
    AND h.mode_held != &#39;Null&#39;
    AND w.mode_requested != &#39;None&#39;
    AND s1.row_wait_obj# = o.object_id
    AND w.lock_type(+) = h.lock_type
    AND w.lock_id1(+) = h.lock_id1
    AND w.lock_id2 (+) = h.lock_id2
    AND w.session_id = s1.sid (+)
    AND h.session_id = s2.sid (+)
    AND s1.paddr = p1.addr (+)
    AND s2.paddr = p2.addr (+)
    ORDER BY w.last_convert desc;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;tablespaces:d09824b548f82fef46f982c408adadae&#34;&gt;Tablespaces&lt;/h2&gt;

&lt;h3 id=&#34;tablespace-informations:d09824b548f82fef46f982c408adadae&#34;&gt;Tablespace Informations&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    select
       fs.tablespace_name                          &amp;quot;Tablespace&amp;quot;,
       (df.totalspace - fs.freespace)              &amp;quot;Used MB&amp;quot;,
       fs.freespace                                &amp;quot;Free MB&amp;quot;,
       df.totalspace                               &amp;quot;Total MB&amp;quot;,
       round(100 * (fs.freespace / df.totalspace)) &amp;quot;Pct. Free&amp;quot;
    from
       (select
          tablespace_name,
          round(sum(bytes) / 1048576) TotalSpace
       from
          dba_data_files
       group by
          tablespace_name
       ) df,
       (select
          tablespace_name,
          round(sum(bytes) / 1048576) FreeSpace
       from
          dba_free_space
       group by
          tablespace_name
       ) fs
    where
       df.tablespace_name = fs.tablespace_name;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;table-sizes-for-the-current-schema:d09824b548f82fef46f982c408adadae&#34;&gt;Table sizes for the current schema&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    SET serveroutput ON
    DECLARE
      CURSOR tabs
      IS
        SELECT object_name FROM user_objects WHERE object_type = &#39;TABLE&#39;;
      table_size_meg pls_integer := 0;
    BEGIN
      FOR t IN tabs
      LOOP
        BEGIN
          SELECT SUM(bytes)/(1024*1024)
          INTO table_size_meg
          FROM user_extents
          WHERE segment_type=&#39;TABLE&#39;
          AND segment_name  = t.object_name
          GROUP BY segment_name;
          dbms_output.put_line(t.object_name || &#39;: &#39; || table_size_meg || &#39; MB&#39;);
        EXCEPTION
        WHEN no_data_found THEN
          dbms_output.put_line(&#39;No data found.&#39;);
        END;
      END LOOP;
    END;
    /
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;database-objects:d09824b548f82fef46f982c408adadae&#34;&gt;Database objects&lt;/h2&gt;

&lt;h3 id=&#34;reverse-engineering-of-db-objects:d09824b548f82fef46f982c408adadae&#34;&gt;Reverse Engineering of DB objects&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    select DBMS_METADATA.GET_DDL(&#39;TABLE&#39;,&#39;table_name&#39;) from dual;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-db-links:d09824b548f82fef46f982c408adadae&#34;&gt;Create DB links&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    CREATE DATABASE LINK &amp;quot;link_name&amp;quot;
      CONNECT TO schema_name 
      IDENTIFIED BY pass
      USING &#39;tns definition (e. g. from tnsnames.ora)&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;determine-table-size-mb:d09824b548f82fef46f982c408adadae&#34;&gt;Determine table size (MB)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    SELECT
      segment_name AS table_name,   
      Sum(bytes)/(1024*1024) table_size_meg
    FROM user_extents
    WHERE segment_type=&#39;TABLE&#39;
    AND segment_name = &#39;table_name&#39;
    GROUP BY segment_name
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;check-compile-state-of-db-objects:d09824b548f82fef46f982c408adadae&#34;&gt;Check compile state of DB objects&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    SELECT o.object_type, o.object_name
    FROM user_objects o
    WHERE o.status &amp;lt;&amp;gt; &#39;VALID&#39;
    AND o.object_type IN (&#39;VIEW&#39;,&#39;PROCEDURE&#39;,&#39;FUNCTION&#39;,&#39;PACKAGE&#39;,&#39;TRIGGER&#39;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;check-long-operations:d09824b548f82fef46f982c408adadae&#34;&gt;Check long operations&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    SELECT v.sid, se.osuser, se.machine, se.program, v.target, v.opname
    FROM V$SESSION_LONGOPS v, v$session se
    WHERE v.sid = se.sid
    AND v.username = &#39;user_name&#39;
    ORDER BY se.machine 

    -- determine progress and remaining time
    SELECT
      To_Char(Floor(elapsed_seconds / 3600), &#39;FM09&#39;) || &#39;:&#39; || 
      To_Char(Floor(Mod(elapsed_seconds, 3600) / 60), &#39;FM09&#39;) || &#39;:&#39; || 
      To_Char(Mod(elapsed_seconds, 60), &#39;FM09&#39;) AS runtime,
      To_Char(Floor(time_remaining / 3600), &#39;FM09&#39;) || &#39;:&#39; || 
      To_Char(Floor(Mod(time_remaining, 3600) / 60), &#39;FM09&#39;) || &#39;:&#39; || 
      To_Char(Mod(time_remaining, 60), &#39;FM09&#39;) AS remaining,
      To_Char(((sofar / totalwork) * 100), &#39;FM99.99&#39;) || &#39; %&#39; AS done_pct 
    FROM V$SESSION_LONGOPS v, v$session se
    WHERE v.sid = se.sid 
    AND v.target = &#39;schema_name.object_name&#39;
    AND v.username = &#39;schema_name&#39;
    AND se.sid = &#39;&amp;lt;sid&amp;gt;&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;check-where-the-trace-file-for-current-session-is:d09824b548f82fef46f982c408adadae&#34;&gt;Check where the trace file for current session is&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    select 
      u_dump.value   || &#39;/&#39;     || 
      db_name.value  || &#39;_ora_&#39; || 
      v$process.spid || 
      nvl2(v$process.traceid,  &#39;_&#39; || v$process.traceid, null ) 
      || &#39;.trc&#39;  &amp;quot;Trace File&amp;quot;
    from 
                 v$parameter u_dump 
      cross join v$parameter db_name
      cross join v$process 
            join v$session 
              on v$process.addr = v$session.paddr
    where 
     u_dump.name   = &#39;user_dump_dest&#39; and 
     db_name.name  = &#39;db_name&#39;        and
     v$session.audsid=sys_context(&#39;userenv&#39;,&#39;sessionid&#39;);

    (from http://www.adp-gmbh.ch/ora/misc/find_trace_file.html)
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Linux Snippets</title>
          <link>https://axelknauf.github.io/post/linux-filesystem-snippets/</link>
          <pubDate>Mon, 20 Jul 2015 20:17:16 &#43;0100</pubDate>
          <author>Axel Knauf</author>
          <guid>https://axelknauf.github.io/post/linux-filesystem-snippets/</guid>
          <description>

&lt;p&gt;This article collects all kinds of useful tips and tricks around Linux usage, mostly if not all of them about command line tools. Many have been collected over the years, so any advanced user may not find them interesting. But when getting started with the command line, they may still be helpful for new users.&lt;/p&gt;

&lt;h2 id=&#34;common-issues:39650f4cd9137409ea20052b6865dcd3&#34;&gt;Common issues&lt;/h2&gt;

&lt;h3 id=&#34;too-many-open-files:39650f4cd9137409ea20052b6865dcd3&#34;&gt;&amp;ldquo;Too many open files&amp;rdquo;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;check current limit (only valid for executing user): &lt;code&gt;ulimit -a&lt;/code&gt; or specifically &lt;code&gt;ulimit -n&lt;/code&gt; (&lt;code&gt;-n&lt;/code&gt; refers to &amp;ldquo;number of files&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;set limit with &lt;code&gt;ulimit -n unlimited&lt;/code&gt; or &lt;code&gt;ulimit -n 65535&lt;/code&gt; (may result in &amp;ldquo;permission denied&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;on Fedora: edit &lt;code&gt;/etc/security/limits.conf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;common-filesystem-tasks:39650f4cd9137409ea20052b6865dcd3&#34;&gt;Common filesystem tasks&lt;/h2&gt;

&lt;h3 id=&#34;list-folders-by-size-descending-recursively:39650f4cd9137409ea20052b6865dcd3&#34;&gt;List folders by size descending recursively&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    find . -type d -exec du -b {} \; | sort -nr | uniq
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;latest-changed-files-one-folder-deep-search:39650f4cd9137409ea20052b6865dcd3&#34;&gt;Latest changed files (one folder deep search)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    find . -maxdepth 2 -type f -exec stat -c %y_%n {} \; | sort -r | less
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;10-latest-changed-files-recursively:39650f4cd9137409ea20052b6865dcd3&#34;&gt;10 latest changed files (recursively)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    find . -type f -printf &#39;%TF_%TT %p \n&#39; | sort -r | head -n 10
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;change-file-encoding-e-g-from-utf-8:39650f4cd9137409ea20052b6865dcd3&#34;&gt;Change file encoding (e. g. from UTF-8)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    recode -f ascii &amp;lt;file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;networking-and-web:39650f4cd9137409ea20052b6865dcd3&#34;&gt;Networking and Web&lt;/h2&gt;

&lt;h3 id=&#34;use-kernel-prerouting-to-direct-traffic-from-port-80-to-8080-e-g-for-fronting-tomcat:39650f4cd9137409ea20052b6865dcd3&#34;&gt;Use kernel prerouting to direct traffic from port 80 to 8080, e. g. for fronting tomcat&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j DNAT --to-destination :8080
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;repeatedly-serve-a-file-using-netcat-call-with-wget-http-localhost-12345:39650f4cd9137409ea20052b6865dcd3&#34;&gt;Repeatedly serve a file using netcat (call with wget &lt;a href=&#34;http://localhost:12345/&#34;&gt;http://localhost:12345/&lt;/a&gt;)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;    #!/bin/bash

    while true
    do
      { echo -ne &amp;quot;HTTP/1.0 200 OK\r\nContent-Length: $(wc -c &amp;amp;lt;file.txt)\r\n\r\n&amp;quot;; cat file.txt; } | nc -l 12345
    done

    exit 0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;apply-htdigest-protection-to-apache-directory:39650f4cd9137409ea20052b6865dcd3&#34;&gt;Apply htdigest protection to Apache directory&lt;/h3&gt;

&lt;h4 id=&#34;required-modules:39650f4cd9137409ea20052b6865dcd3&#34;&gt;Required modules&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mod_authz_user&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mod_auth_digest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mod_authn_file&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;configuration:39650f4cd9137409ea20052b6865dcd3&#34;&gt;Configuration&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;Location /path/to/protect&amp;gt;
       AuthType Digest
       AuthName &amp;quot;Protected Area&amp;quot;
       AuthDigestDomain /path/to/protect http://11.22.33.44/path/to/protect
       AuthDigestProvider file
       AuthUserFile /etc/apache2/conf/digest_pw
       Require valid-user
    &amp;lt;/Location&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;create-digest-pw-file:39650f4cd9137409ea20052b6865dcd3&#34;&gt;Create digest_pw file&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;    htdigest -c /etc/apache2/conf/digest_pw &amp;quot;Protected Area&amp;quot; username
    =&amp;gt; will be asked for password, file created
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;upload-multiple-files-via-ftp-which-is-an-interactive-tool:39650f4cd9137409ea20052b6865dcd3&#34;&gt;Upload multiple files via FTP (which is an interactive tool)&lt;/h3&gt;

&lt;p&gt;Requires curlftpfs and fuse + rsync&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    #!/bin/bash

    SOURCE_DIR=./dist/
    HOST=some.host.com
    USER=username
    PASS=passsword
    TARGET_DIR=/target/
    MOUNT_POINT=./mnt/
    TMP_DIR=$(mktemp -d)

    #########################################################################
    ## Abort if mount point does not exist
    if [ ! -d ${MOUNT_POINT} ];
    then
      echo &amp;quot;Target mount point directory does not exist, aborting.&amp;quot;
      exit 1
    fi

    #########################################################################
    ## Mount remote file system locally
    curlftpfs -o user=${USER}:${PASS} ${HOST} ${MOUNT_POINT} || exit 1

    #########################################################################
    ## Transfer files incrementally
    if [ -d &amp;quot;${MOUNT_POINT}/${TARGET_DIR}&amp;quot; ]
    then
        rsync -rtuv --modify-window=1 --delete --no-perms --size-only --temp-dir=${TMP_DIR} ${SOURCE_DIR}/ ${MOUNT_POINT}/${TARGET_DIR}/
    else
        echo &amp;quot;Target remote directory does not exist, aborting.&amp;quot;
    fi

    #########################################################################
    ## Unmount remote file system
    fusermount -u ${MOUNT_POINT}

    #########################################################################
    ## Remove temporary directory
    if [ -d &amp;quot;${TMP_DIR}&amp;quot; ];
    then
        rm -rf ${TMP_DIR}
    fi

    exit 0
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Linux: Dell XPS 13 9343</title>
          <link>https://axelknauf.github.io/post/xps13-9343/</link>
          <pubDate>Sun, 24 May 2015 12:26:57 &#43;0100</pubDate>
          <author>Axel Knauf</author>
          <guid>https://axelknauf.github.io/post/xps13-9343/</guid>
          <description>

&lt;p&gt;A couple of days ago I received my new toy: A brand new Dell XPS 13 Developer Edition with pre-installed Ubuntu Linux 14.04 LTS. This post summarizes my experiences through the first couple of days - technical issues, their solutions and my general impressions about the device.&lt;/p&gt;

&lt;h2 id=&#34;technical-specifications:c9e54f8d4937b3d4be60ab9d6222f50e&#34;&gt;Technical Specifications&lt;/h2&gt;

&lt;p&gt;I ordered the high-end Linux device with the following technical specs. In Germany there are only two Linux versions and since I wanted the bigger hard drive and high DPI display, I chose the more expensive one which came at a price tag of 1,629 EUR.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intel i7-5500U processor (4 core @ 3GHz, 4 MB Cache),&lt;/li&gt;
&lt;li&gt;13,3&amp;rdquo; QHD+ touch display (3200x1800 resolution),&lt;/li&gt;
&lt;li&gt;8 GB RAM,&lt;/li&gt;
&lt;li&gt;512G SSD HDD&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can find the full specifications at &lt;a href=&#34;http://www.dell.com/de/p/xps-13-9343-laptop/pd?oc=cnx4311&amp;amp;model_id=xps-13-9343-laptop&#34;&gt;Dell&amp;rsquo;s website&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;first-impressions:c9e54f8d4937b3d4be60ab9d6222f50e&#34;&gt;First Impressions&lt;/h2&gt;

&lt;p&gt;The device makes a robust and high-end impression as can be expected at this price level. There are many detailed reviews of the device around the net. Just fire up your choice of search engine (I recommend &lt;a href=&#34;https://duckduckgo.com/?q=+dell+xps+13+review&#34;&gt;DuckDuckGo&lt;/a&gt;!).&lt;/p&gt;

&lt;p&gt;The body is made from aluminium, the palm rests are carbon. The small bevel around the screen makes it feel even bigger than the high resolution display suggests. The display is sharp and crystal clear, touch works as expected - depending on the application even multi-touch gestures, e. g. pinch-to-zoom in the pre-installed Chromium web browser (which does not yet work in Firefox).&lt;/p&gt;

&lt;p&gt;I did not really want a touch display in the first place, but for some use cases, it even feels natural and makes sense. E. g. when using Rhythmbox and skipping a track with the &amp;ldquo;next&amp;rdquo; button directly on-screen, or when using the Unity launcher icons to start an application. However, when using the touch screen the whole device starts to wobble, since it is not a tablet computer which rests on the sceen itself. But it is a nice additional input method.&lt;/p&gt;

&lt;h2 id=&#34;first-issues:c9e54f8d4937b3d4be60ab9d6222f50e&#34;&gt;First Issues&lt;/h2&gt;

&lt;p&gt;No system is perfect, but some issues really caught me off-guard, since a consumer device with a price tag at more than 1,600 EUR should not exhibit teething problems.&lt;/p&gt;

&lt;h3 id=&#34;hard-drive-partitions:c9e54f8d4937b3d4be60ab9d6222f50e&#34;&gt;Hard Drive Partitions&lt;/h3&gt;

&lt;p&gt;First of all the partitioning scheme uses one large partition for the whole system and user data. Of course there are additional partitions like the UEFI boot partition and Dell&amp;rsquo;s recovery partition. But nevertheless, since the device is labeled as a &amp;ldquo;Developer Edition&amp;rdquo; I would have expected it to be split up, separating the &lt;code&gt;/home&lt;/code&gt; partition from the system root.&lt;/p&gt;

&lt;p&gt;The system uses UEFI with GPT partitions, so I bootet the device with a USB thumb drive (in my case it was a Ubuntu 15.04 64bit server installation medium, but any recent live image will do, as long as &lt;code&gt;parted&lt;/code&gt; and &lt;code&gt;e2fstools&lt;/code&gt; are available). Then I resized the partition to free up some space for my new /home partition.&lt;/p&gt;

&lt;p&gt;Resizing a partition involves two steps, depending on if you are enlarging or shrinking it. In my case I wanted to shrink the partition, so I first shrank the filesystem inside it using a command similar to:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    resize2fs -p /dev/sda4 100GB
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;-p&lt;/code&gt; flag indicates to show a simple text progress bar. Since the operation may take a while this is really helpful to see that the system is still active doing its work. Before issuing this command, &lt;code&gt;resize2fs&lt;/code&gt; may indicate that you should run a &lt;code&gt;fsck&lt;/code&gt; first, so I did:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    e2fsck -f /dev/sda4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After having resized the file system, I used &lt;code&gt;parted&lt;/code&gt; to resize the surrounding partition. Unfortunately I did not have a more user friendly tool (like the ncurses-driven &lt;code&gt;cgdisk&lt;/code&gt;) available on my live medium, but &lt;code&gt;parted&lt;/code&gt; is an old-school work-horse being able to modify GPTs anyway, even if the commands issued are more complex. I will not go into the details about this step, but be aware of one important issue - which the man page explicitly mentions: Do not resize the partition to be smaller than the filesystem inside! Otherwise your system will become unbootable. I did, so I know.&lt;/p&gt;

&lt;p&gt;I ran into this issue due to a calculation problem: parted expects the END of the partition when resizing, not the SIZE! Fortunately, if you did not change the beginning sector of the partition, you can easily resize it in a second run without losing anything. All your data will still be available.&lt;/p&gt;

&lt;p&gt;When the partition has its new size, it is best to re-run &lt;code&gt;resize2fs&lt;/code&gt; to make the file system use all of the partition. This is the default behavior when not giving any explicit size to the command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    resize2fs -p /dev/sda4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There are many &lt;a href=&#34;http://positon.org/resize-an-ext3-ext4-partition&#34;&gt;good guides&lt;/a&gt; on the net describing this process in more detail, in case you are interested.&lt;/p&gt;

&lt;p&gt;With the newly created free space, it is quite easy to set up a new ext4 partition to hold my &lt;code&gt;/home&lt;/code&gt; mount point. There is a good description in the &lt;a href=&#34;https://help.ubuntu.com/community/Partitioning/Home/Moving&#34;&gt;Ubuntu community wiki&lt;/a&gt; about the process of moving over all data and the mount point from a previous location. It is quite intuitive and I would not have it done differently.&lt;/p&gt;

&lt;h3 id=&#34;touch-pad-responsiveness-and-freezes:c9e54f8d4937b3d4be60ab9d6222f50e&#34;&gt;Touch Pad Responsiveness and Freezes&lt;/h3&gt;

&lt;p&gt;Another, even more annoying issue was the usability and instability of the integrated &amp;ldquo;precision&amp;rdquo; touch pad. I would freeze and jump every 5-10 seconds and not take any input for 1-3 seconds. The syslog would then show messages about input data being dropped. This issues seems to be known in the community, and the helpful folks in the IRC channel #xps13 on freenode.net pointed me to &lt;a href=&#34;http://www.dell.com/support/article/us/en/19/SLN297219/en&#34;&gt;these packages in the Dell knowledge base&lt;/a&gt;. Installing them and rebooting (they build a couple of DKMS modules for the current kernel) resolved the issue on 14.04 for me. The touchpad has been working smooth and fine since.&lt;/p&gt;

&lt;p&gt;Another alternative is simple to go for a separate installation of a newer distro. In vanilla Ubuntu 15.04 the touchpad issues have already been resolved, and with the new free space on my hard drive (see partitioning above) I had plenty of space to create a separate partition and simply install a 15.04 version alongside the pre-installed LTS.&lt;/p&gt;

&lt;p&gt;Barton George (project Sputnik founder at Dell) has a really &lt;a href=&#34;http://bartongeorge.net/2015/04/09/4th-gen-dell-xps-13-developer-edition-available/&#34;&gt;detailed and thorough blog post about the current (April 2015) state of the XPS 13 on different distributions&lt;/a&gt;, in case you intend to run something else.&lt;/p&gt;

&lt;h3 id=&#34;high-dpi-with-legacy-applications:c9e54f8d4937b3d4be60ab9d6222f50e&#34;&gt;High DPI with Legacy Applications&lt;/h3&gt;

&lt;p&gt;The third issue which bit me was support for high resolution displays with applications which do not directly support them. Unity can be configured to scale all UI widgets by a factor (2x in my case) which makes it look fine on the 3200x1800 display. But unfortunately even the most recent versions of Eclipse still to not support high DPI displays.&lt;/p&gt;

&lt;p&gt;Please go and &lt;a href=&#34;https://bugs.eclipse.org/bugs/show_bug.cgi?id=382972&#34;&gt;vote on this bug&lt;/a&gt; to push the issue.&lt;/p&gt;

&lt;p&gt;In order to be able to use Eclipse (&lt;a href=&#34;http://scala-ide.org/&#34;&gt;Scala IDE&lt;/a&gt; in my case) there exists a hack which another annoyed user put together. A comparably primitive &lt;a href=&#34;https://github.com/davidglevy/eclipse-icon-enlarger&#34;&gt;tool to process all of the archive files&lt;/a&gt; inside an Eclipse installation directory and scale the images to double size. Afterwards, Eclipse may not look perfectly fine, but it is usable. So, hat tip to davidglevy!&lt;/p&gt;

&lt;h2 id=&#34;what-s-next:c9e54f8d4937b3d4be60ab9d6222f50e&#34;&gt;What&amp;rsquo;s Next?&lt;/h2&gt;

&lt;p&gt;After these initial issues, my Dell XPS 13 is a really neat and fine device. Hardware support with Ubuntu is near-perfect (only the HDMI out on the additional 4-in-1 adapter does not work, but I just ordered a mini-DVI-to-HDMI adapter to be able to attach HDMI displays, so I do not really care). Performance is awesome and battery life seems to be really good. I did not put it to a test, but running under average work load (playing music while browsing the web or programming with lots of I/O) seems to yield easy 7h+ of working time with still some power left.&lt;/p&gt;

&lt;p&gt;In case you are searching for a portable, well-supported Linux ultrabook, I definitely recommend this device. Assuming you can spend the money, since it is not cheap.&lt;/p&gt;

&lt;p&gt;Thanks a lot to the Linux folks at &lt;a href=&#34;http://www.dell.com/learn/us/en/555/campaigns/xps-linux-laptop&#34;&gt;Dell&amp;rsquo;s project Sputnik&lt;/a&gt; for making this device available!&lt;/p&gt;
</description>
        </item>
      
    

  </channel>
</rss>
